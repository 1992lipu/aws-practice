{
    "version": 3,
    "terraform_version": "0.11.7",
    "serial": 2,
    "lineage": "e46d24e2-d90a-91c9-2b2a-1b65c4e7cb87",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "sf_cluster"
            ],
            "outputs": {},
            "resources": {
                "aws_alb.main": {
                    "type": "aws_alb",
                    "depends_on": [
                        "aws_security_group.load_balancer"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:loadbalancer/app/soumya-sf-lb/91bddbd2fda57e9b",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:loadbalancer/app/soumya-sf-lb/91bddbd2fda57e9b",
                            "arn_suffix": "app/soumya-sf-lb/91bddbd2fda57e9b",
                            "dns_name": "soumya-sf-lb-1720288531.us-east-1.elb.amazonaws.com",
                            "enable_deletion_protection": "false",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:loadbalancer/app/soumya-sf-lb/91bddbd2fda57e9b",
                            "idle_timeout": "60",
                            "internal": "false",
                            "ip_address_type": "ipv4",
                            "name": "soumya-sf-lb",
                            "security_groups.#": "1",
                            "security_groups.3345290333": "sg-0dc5ac90d206d7aec",
                            "subnets.#": "2",
                            "subnets.1126314732": "subnet-ed65cce2",
                            "subnets.968239460": "subnet-69babe34",
                            "tags.%": "1",
                            "tags.Environment": "dev",
                            "vpc_id": "vpc-d923bda2",
                            "zone_id": "Z35SXDOTRQ7X7K"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_listener.main_http": {
                    "type": "aws_alb_listener",
                    "depends_on": [
                        "aws_alb.main",
                        "aws_alb_target_group.main"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:listener/app/soumya-sf-lb/91bddbd2fda57e9b/d42f5e64e1881b96",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:listener/app/soumya-sf-lb/91bddbd2fda57e9b/d42f5e64e1881b96",
                            "default_action.#": "1",
                            "default_action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:targetgroup/soumya-sf-tg/3804bd5511f73d38",
                            "default_action.0.type": "forward",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:listener/app/soumya-sf-lb/91bddbd2fda57e9b/d42f5e64e1881b96",
                            "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:loadbalancer/app/soumya-sf-lb/91bddbd2fda57e9b",
                            "port": "80",
                            "protocol": "HTTP",
                            "ssl_policy": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_listener_rule.explorer": {
                    "type": "aws_alb_listener_rule",
                    "depends_on": [
                        "aws_alb_listener.main_http",
                        "aws_alb_target_group.main"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:listener-rule/app/soumya-sf-lb/91bddbd2fda57e9b/d42f5e64e1881b96/f7637a8c16aa4394",
                        "attributes": {
                            "action.#": "1",
                            "action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:targetgroup/soumya-sf-tg/3804bd5511f73d38",
                            "action.0.type": "forward",
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:listener-rule/app/soumya-sf-lb/91bddbd2fda57e9b/d42f5e64e1881b96/f7637a8c16aa4394",
                            "condition.#": "1",
                            "condition.2346827850.field": "path-pattern",
                            "condition.2346827850.values.#": "1",
                            "condition.2346827850.values.0": "/Explorer/*",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:listener-rule/app/soumya-sf-lb/91bddbd2fda57e9b/d42f5e64e1881b96/f7637a8c16aa4394",
                            "listener_arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:listener/app/soumya-sf-lb/91bddbd2fda57e9b/d42f5e64e1881b96",
                            "priority": "100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_target_group.main": {
                    "type": "aws_alb_target_group",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:targetgroup/soumya-sf-tg/3804bd5511f73d38",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:targetgroup/soumya-sf-tg/3804bd5511f73d38",
                            "arn_suffix": "targetgroup/soumya-sf-tg/3804bd5511f73d38",
                            "deregistration_delay": "60",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "2",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/Explorer/index.html",
                            "health_check.0.port": "traffic-port",
                            "health_check.0.protocol": "HTTP",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:768069707814:targetgroup/soumya-sf-tg/3804bd5511f73d38",
                            "name": "soumya-sf-tg",
                            "port": "19080",
                            "protocol": "HTTP",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "86400",
                            "stickiness.0.enabled": "false",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "1",
                            "tags.Environment": "dev",
                            "vpc_id": "vpc-d923bda2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_autoscaling_attachment.target_grp_asg_attachment": {
                    "type": "aws_autoscaling_attachment",
                    "depends_on": [
                        "aws_alb_target_group.main",
                        "aws_autoscaling_group.main"
                    ],
                    "primary": {
                        "id": "soumya-sf-ecs-scaling-group-006d4497625dd90c5d22578f8c",
                        "attributes": {
                            "alb_target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:768069707814:targetgroup/soumya-sf-tg/3804bd5511f73d38",
                            "autoscaling_group_name": "soumya-sf-ecs-scaling-group",
                            "id": "soumya-sf-ecs-scaling-group-006d4497625dd90c5d22578f8c"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_autoscaling_group.main": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_launch_configuration.main"
                    ],
                    "primary": {
                        "id": "soumya-sf-ecs-scaling-group",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-1:768069707814:autoScalingGroup:b52ef708-45d0-414e-afe9-533e789eb2ce:autoScalingGroupName/soumya-sf-ecs-scaling-group",
                            "availability_zones.#": "2",
                            "availability_zones.1252502072": "us-east-1f",
                            "availability_zones.3569565595": "us-east-1a",
                            "default_cooldown": "30",
                            "desired_capacity": "1",
                            "force_delete": "true",
                            "health_check_grace_period": "0",
                            "health_check_type": "EC2",
                            "id": "soumya-sf-ecs-scaling-group",
                            "launch_configuration": "soumya-sf-ecs-launch-config-006d4497625dd90c5d22578f8b",
                            "load_balancers.#": "0",
                            "max_size": "2",
                            "metrics_granularity": "1Minute",
                            "min_size": "1",
                            "name": "soumya-sf-ecs-scaling-group",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "suspended_processes.#": "0",
                            "tag.#": "2",
                            "tag.3051298370.key": "Name",
                            "tag.3051298370.propagate_at_launch": "true",
                            "tag.3051298370.value": "soumya-sf",
                            "tag.3940217739.key": "IsServiceFabricMaster",
                            "tag.3940217739.propagate_at_launch": "true",
                            "tag.3940217739.value": "Yes",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "1",
                            "termination_policies.0": "OldestInstance",
                            "vpc_zone_identifier.#": "2",
                            "vpc_zone_identifier.1126314732": "subnet-ed65cce2",
                            "vpc_zone_identifier.968239460": "subnet-69babe34",
                            "wait_for_capacity_timeout": "10m"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_autoscaling_policy.scale_down_policy": {
                    "type": "aws_autoscaling_policy",
                    "depends_on": [
                        "aws_autoscaling_group.main"
                    ],
                    "primary": {
                        "id": "aws_autoscaling_group_scale_down_policy",
                        "attributes": {
                            "adjustment_type": "ChangeInCapacity",
                            "arn": "arn:aws:autoscaling:us-east-1:768069707814:scalingPolicy:78ec1d0e-80ca-4ba4-a3fc-feb573873dc3:autoScalingGroupName/soumya-sf-ecs-scaling-group:policyName/aws_autoscaling_group_scale_down_policy",
                            "autoscaling_group_name": "soumya-sf-ecs-scaling-group",
                            "cooldown": "300",
                            "estimated_instance_warmup": "0",
                            "id": "aws_autoscaling_group_scale_down_policy",
                            "metric_aggregation_type": "",
                            "min_adjustment_step": "0",
                            "name": "aws_autoscaling_group_scale_down_policy",
                            "policy_type": "SimpleScaling",
                            "scaling_adjustment": "-1",
                            "step_adjustment.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_autoscaling_policy.scale_up_policy": {
                    "type": "aws_autoscaling_policy",
                    "depends_on": [
                        "aws_autoscaling_group.main"
                    ],
                    "primary": {
                        "id": "aws_autoscaling_group_scale_up_policy",
                        "attributes": {
                            "adjustment_type": "ChangeInCapacity",
                            "arn": "arn:aws:autoscaling:us-east-1:768069707814:scalingPolicy:af9062b9-0ea9-4274-b783-19065f23fb3b:autoScalingGroupName/soumya-sf-ecs-scaling-group:policyName/aws_autoscaling_group_scale_up_policy",
                            "autoscaling_group_name": "soumya-sf-ecs-scaling-group",
                            "cooldown": "300",
                            "estimated_instance_warmup": "0",
                            "id": "aws_autoscaling_group_scale_up_policy",
                            "metric_aggregation_type": "",
                            "min_adjustment_step": "0",
                            "name": "aws_autoscaling_group_scale_up_policy",
                            "policy_type": "SimpleScaling",
                            "scaling_adjustment": "1",
                            "step_adjustment.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_cloudwatch_metric_alarm.scale_down": {
                    "type": "aws_cloudwatch_metric_alarm",
                    "depends_on": [
                        "aws_autoscaling_group.main",
                        "aws_autoscaling_policy.scale_down_policy"
                    ],
                    "primary": {
                        "id": "aws_autoscaling_group_scale_down",
                        "attributes": {
                            "actions_enabled": "true",
                            "alarm_actions.#": "1",
                            "alarm_actions.791996655": "arn:aws:autoscaling:us-east-1:768069707814:scalingPolicy:78ec1d0e-80ca-4ba4-a3fc-feb573873dc3:autoScalingGroupName/soumya-sf-ecs-scaling-group:policyName/aws_autoscaling_group_scale_down_policy",
                            "alarm_description": "This metric monitors ec2 cpu utilization",
                            "alarm_name": "aws_autoscaling_group_scale_down",
                            "comparison_operator": "LessThanOrEqualToThreshold",
                            "dimensions.%": "1",
                            "dimensions.AutoScalingGroupName": "soumya-sf-ecs-scaling-group",
                            "evaluate_low_sample_count_percentiles": "",
                            "evaluation_periods": "2",
                            "extended_statistic": "",
                            "id": "aws_autoscaling_group_scale_down",
                            "insufficient_data_actions.#": "0",
                            "metric_name": "CPUUtilization",
                            "namespace": "AWS/EC2",
                            "ok_actions.#": "0",
                            "period": "300",
                            "statistic": "Average",
                            "threshold": "5",
                            "treat_missing_data": "missing",
                            "unit": ""
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_cloudwatch_metric_alarm.scale_up": {
                    "type": "aws_cloudwatch_metric_alarm",
                    "depends_on": [
                        "aws_autoscaling_group.main",
                        "aws_autoscaling_policy.scale_up_policy"
                    ],
                    "primary": {
                        "id": "aws_autoscaling_group_scale_up",
                        "attributes": {
                            "actions_enabled": "true",
                            "alarm_actions.#": "1",
                            "alarm_actions.4261535633": "arn:aws:autoscaling:us-east-1:768069707814:scalingPolicy:af9062b9-0ea9-4274-b783-19065f23fb3b:autoScalingGroupName/soumya-sf-ecs-scaling-group:policyName/aws_autoscaling_group_scale_up_policy",
                            "alarm_description": "This metric monitors ec2 cpu utilization",
                            "alarm_name": "aws_autoscaling_group_scale_up",
                            "comparison_operator": "GreaterThanOrEqualToThreshold",
                            "dimensions.%": "1",
                            "dimensions.AutoScalingGroupName": "soumya-sf-ecs-scaling-group",
                            "evaluate_low_sample_count_percentiles": "",
                            "evaluation_periods": "2",
                            "extended_statistic": "",
                            "id": "aws_autoscaling_group_scale_up",
                            "insufficient_data_actions.#": "0",
                            "metric_name": "CPUUtilization",
                            "namespace": "AWS/EC2",
                            "ok_actions.#": "0",
                            "period": "300",
                            "statistic": "Average",
                            "threshold": "80",
                            "treat_missing_data": "missing",
                            "unit": ""
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_launch_configuration.main": {
                    "type": "aws_launch_configuration",
                    "depends_on": [
                        "aws_security_group.instances",
                        "data.aws_ami.amaz-ami-windows_server",
                        "data.template_file.user_data"
                    ],
                    "primary": {
                        "id": "soumya-sf-ecs-launch-config-006d4497625dd90c5d22578f8b",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "ecsInstanceRole-1",
                            "id": "soumya-sf-ecs-launch-config-006d4497625dd90c5d22578f8b",
                            "image_id": "ami-cdbd65b2",
                            "instance_type": "t2.medium",
                            "key_name": "soumya",
                            "name": "soumya-sf-ecs-launch-config-006d4497625dd90c5d22578f8b",
                            "name_prefix": "soumya-sf-ecs-launch-config-",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.4085199016": "sg-07ca10907015797eb",
                            "spot_price": "",
                            "user_data": "a6caf8ee6f333d546d22708ccc884ce9df3d16f1",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.instances": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-07ca10907015797eb",
                        "attributes": {
                            "description": "soumya-sf-InstanceSecurityGroup",
                            "egress.#": "0",
                            "id": "sg-07ca10907015797eb",
                            "ingress.#": "0",
                            "name": "soumya-sf-InstanceSecurityGroup",
                            "owner_id": "768069707814",
                            "tags.%": "1",
                            "tags.Name": "soumya-sf-InstanceSecurityGroup",
                            "vpc_id": "vpc-d923bda2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.load_balancer": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-0dc5ac90d206d7aec",
                        "attributes": {
                            "description": "soumya-sf-LoadBalancerSecurityGroup",
                            "egress.#": "0",
                            "id": "sg-0dc5ac90d206d7aec",
                            "ingress.#": "0",
                            "name": "soumya-sf-LoadBalancerSecurityGroup",
                            "owner_id": "768069707814",
                            "tags.%": "1",
                            "tags.Name": "soumya-sf-LoadBalancerSecurityGroup",
                            "vpc_id": "vpc-d923bda2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.anywhere_to_load_balancer_http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.load_balancer"
                    ],
                    "primary": {
                        "id": "sgrule-1523077649",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-1523077649",
                            "protocol": "tcp",
                            "security_group_id": "sg-0dc5ac90d206d7aec",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.anywhere_to_load_balancer_https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.load_balancer"
                    ],
                    "primary": {
                        "id": "sgrule-1889479666",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-1889479666",
                            "protocol": "tcp",
                            "security_group_id": "sg-0dc5ac90d206d7aec",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.http_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances"
                    ],
                    "primary": {
                        "id": "sgrule-3687799373",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-3687799373",
                            "protocol": "tcp",
                            "security_group_id": "sg-07ca10907015797eb",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.https_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances"
                    ],
                    "primary": {
                        "id": "sgrule-1749692575",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-1749692575",
                            "protocol": "tcp",
                            "security_group_id": "sg-07ca10907015797eb",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.icmp_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances"
                    ],
                    "primary": {
                        "id": "sgrule-1183330110",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "10.159.0.0/23",
                            "cidr_blocks.1": "10.159.2.0/23",
                            "from_port": "8",
                            "id": "sgrule-1183330110",
                            "protocol": "icmp",
                            "security_group_id": "sg-07ca10907015797eb",
                            "self": "false",
                            "to_port": "-1",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.instances_from_load_balancer": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances",
                        "aws_security_group.load_balancer"
                    ],
                    "primary": {
                        "id": "sgrule-601468164",
                        "attributes": {
                            "from_port": "0",
                            "id": "sgrule-601468164",
                            "protocol": "tcp",
                            "security_group_id": "sg-07ca10907015797eb",
                            "self": "false",
                            "source_security_group_id": "sg-0dc5ac90d206d7aec",
                            "to_port": "65535",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.instances_to_anywhere": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances"
                    ],
                    "primary": {
                        "id": "sgrule-2822168432",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "0",
                            "id": "sgrule-2822168432",
                            "protocol": "tcp",
                            "security_group_id": "sg-07ca10907015797eb",
                            "self": "false",
                            "to_port": "65535",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.load_balancer_to_instances": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances",
                        "aws_security_group.load_balancer"
                    ],
                    "primary": {
                        "id": "sgrule-3963071901",
                        "attributes": {
                            "from_port": "0",
                            "id": "sgrule-3963071901",
                            "protocol": "tcp",
                            "security_group_id": "sg-0dc5ac90d206d7aec",
                            "self": "false",
                            "source_security_group_id": "sg-07ca10907015797eb",
                            "to_port": "65535",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.privateNetwork_ingress": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances"
                    ],
                    "primary": {
                        "id": "sgrule-2358350866",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "10.159.0.0/23",
                            "cidr_blocks.1": "10.159.2.0/23",
                            "from_port": "0",
                            "id": "sgrule-2358350866",
                            "protocol": "-1",
                            "security_group_id": "sg-07ca10907015797eb",
                            "self": "false",
                            "to_port": "65535",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group_rule.rdp_ipreo_cidr": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.instances"
                    ],
                    "primary": {
                        "id": "sgrule-1799762956",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "10.11.0.0/16",
                            "cidr_blocks.1": "10.16.0.0/16",
                            "from_port": "3389",
                            "id": "sgrule-1799762956",
                            "protocol": "tcp",
                            "security_group_id": "sg-07ca10907015797eb",
                            "self": "false",
                            "to_port": "3389",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_ami.amaz-ami-windows_server": {
                    "type": "aws_ami",
                    "depends_on": [],
                    "primary": {
                        "id": "ami-cdbd65b2",
                        "attributes": {
                            "architecture": "x86_64",
                            "block_device_mappings.#": "27",
                            "block_device_mappings.1016747457.device_name": "/dev/sda1",
                            "block_device_mappings.1016747457.ebs.%": "6",
                            "block_device_mappings.1016747457.ebs.delete_on_termination": "true",
                            "block_device_mappings.1016747457.ebs.encrypted": "false",
                            "block_device_mappings.1016747457.ebs.iops": "0",
                            "block_device_mappings.1016747457.ebs.snapshot_id": "snap-015904710d7bb4d31",
                            "block_device_mappings.1016747457.ebs.volume_size": "30",
                            "block_device_mappings.1016747457.ebs.volume_type": "gp2",
                            "block_device_mappings.1016747457.no_device": "",
                            "block_device_mappings.1016747457.virtual_name": "",
                            "block_device_mappings.1059705198.device_name": "xvdcq",
                            "block_device_mappings.1059705198.ebs.%": "0",
                            "block_device_mappings.1059705198.no_device": "",
                            "block_device_mappings.1059705198.virtual_name": "ephemeral16",
                            "block_device_mappings.1243518129.device_name": "xvdck",
                            "block_device_mappings.1243518129.ebs.%": "0",
                            "block_device_mappings.1243518129.no_device": "",
                            "block_device_mappings.1243518129.virtual_name": "ephemeral10",
                            "block_device_mappings.1387559417.device_name": "xvdcn",
                            "block_device_mappings.1387559417.ebs.%": "0",
                            "block_device_mappings.1387559417.no_device": "",
                            "block_device_mappings.1387559417.virtual_name": "ephemeral13",
                            "block_device_mappings.1523720897.device_name": "xvdcm",
                            "block_device_mappings.1523720897.ebs.%": "0",
                            "block_device_mappings.1523720897.no_device": "",
                            "block_device_mappings.1523720897.virtual_name": "ephemeral12",
                            "block_device_mappings.153898353.device_name": "xvdcs",
                            "block_device_mappings.153898353.ebs.%": "0",
                            "block_device_mappings.153898353.no_device": "",
                            "block_device_mappings.153898353.virtual_name": "ephemeral18",
                            "block_device_mappings.1718683500.device_name": "xvdca",
                            "block_device_mappings.1718683500.ebs.%": "0",
                            "block_device_mappings.1718683500.no_device": "",
                            "block_device_mappings.1718683500.virtual_name": "ephemeral0",
                            "block_device_mappings.2079948481.device_name": "xvdcw",
                            "block_device_mappings.2079948481.ebs.%": "0",
                            "block_device_mappings.2079948481.no_device": "",
                            "block_device_mappings.2079948481.virtual_name": "ephemeral22",
                            "block_device_mappings.2127256041.device_name": "xvdcf",
                            "block_device_mappings.2127256041.ebs.%": "0",
                            "block_device_mappings.2127256041.no_device": "",
                            "block_device_mappings.2127256041.virtual_name": "ephemeral5",
                            "block_device_mappings.2271637227.device_name": "xvdch",
                            "block_device_mappings.2271637227.ebs.%": "0",
                            "block_device_mappings.2271637227.no_device": "",
                            "block_device_mappings.2271637227.virtual_name": "ephemeral7",
                            "block_device_mappings.2335601450.device_name": "xvdct",
                            "block_device_mappings.2335601450.ebs.%": "0",
                            "block_device_mappings.2335601450.no_device": "",
                            "block_device_mappings.2335601450.virtual_name": "ephemeral19",
                            "block_device_mappings.2649854802.device_name": "xvdci",
                            "block_device_mappings.2649854802.ebs.%": "0",
                            "block_device_mappings.2649854802.no_device": "",
                            "block_device_mappings.2649854802.virtual_name": "ephemeral8",
                            "block_device_mappings.2752394454.device_name": "xvdco",
                            "block_device_mappings.2752394454.ebs.%": "0",
                            "block_device_mappings.2752394454.no_device": "",
                            "block_device_mappings.2752394454.virtual_name": "ephemeral14",
                            "block_device_mappings.2919192901.device_name": "xvdcp",
                            "block_device_mappings.2919192901.ebs.%": "0",
                            "block_device_mappings.2919192901.no_device": "",
                            "block_device_mappings.2919192901.virtual_name": "ephemeral15",
                            "block_device_mappings.3039404355.device_name": "xvdcc",
                            "block_device_mappings.3039404355.ebs.%": "0",
                            "block_device_mappings.3039404355.no_device": "",
                            "block_device_mappings.3039404355.virtual_name": "ephemeral2",
                            "block_device_mappings.3234906418.device_name": "xvdcy",
                            "block_device_mappings.3234906418.ebs.%": "0",
                            "block_device_mappings.3234906418.no_device": "",
                            "block_device_mappings.3234906418.virtual_name": "ephemeral24",
                            "block_device_mappings.3355749098.device_name": "xvdcl",
                            "block_device_mappings.3355749098.ebs.%": "0",
                            "block_device_mappings.3355749098.no_device": "",
                            "block_device_mappings.3355749098.virtual_name": "ephemeral11",
                            "block_device_mappings.3367410186.device_name": "xvdcz",
                            "block_device_mappings.3367410186.ebs.%": "0",
                            "block_device_mappings.3367410186.no_device": "",
                            "block_device_mappings.3367410186.virtual_name": "ephemeral25",
                            "block_device_mappings.3370773340.device_name": "xvdcg",
                            "block_device_mappings.3370773340.ebs.%": "0",
                            "block_device_mappings.3370773340.no_device": "",
                            "block_device_mappings.3370773340.virtual_name": "ephemeral6",
                            "block_device_mappings.3388947138.device_name": "xvdcd",
                            "block_device_mappings.3388947138.ebs.%": "0",
                            "block_device_mappings.3388947138.no_device": "",
                            "block_device_mappings.3388947138.virtual_name": "ephemeral3",
                            "block_device_mappings.3779702226.device_name": "xvdcu",
                            "block_device_mappings.3779702226.ebs.%": "0",
                            "block_device_mappings.3779702226.no_device": "",
                            "block_device_mappings.3779702226.virtual_name": "ephemeral20",
                            "block_device_mappings.3912234730.device_name": "xvdcv",
                            "block_device_mappings.3912234730.ebs.%": "0",
                            "block_device_mappings.3912234730.no_device": "",
                            "block_device_mappings.3912234730.virtual_name": "ephemeral21",
                            "block_device_mappings.4169893832.device_name": "xvdcj",
                            "block_device_mappings.4169893832.ebs.%": "0",
                            "block_device_mappings.4169893832.no_device": "",
                            "block_device_mappings.4169893832.virtual_name": "ephemeral9",
                            "block_device_mappings.464604531.device_name": "xvdce",
                            "block_device_mappings.464604531.ebs.%": "0",
                            "block_device_mappings.464604531.no_device": "",
                            "block_device_mappings.464604531.virtual_name": "ephemeral4",
                            "block_device_mappings.51057654.device_name": "xvdcb",
                            "block_device_mappings.51057654.ebs.%": "0",
                            "block_device_mappings.51057654.no_device": "",
                            "block_device_mappings.51057654.virtual_name": "ephemeral1",
                            "block_device_mappings.912952349.device_name": "xvdcx",
                            "block_device_mappings.912952349.ebs.%": "0",
                            "block_device_mappings.912952349.no_device": "",
                            "block_device_mappings.912952349.virtual_name": "ephemeral23",
                            "block_device_mappings.927959638.device_name": "xvdcr",
                            "block_device_mappings.927959638.ebs.%": "0",
                            "block_device_mappings.927959638.no_device": "",
                            "block_device_mappings.927959638.virtual_name": "ephemeral17",
                            "creation_date": "2018-04-11T23:11:04.000Z",
                            "description": "Microsoft Windows Server 2016 with Containers Locale English AMI provided by Amazon",
                            "filter.#": "1",
                            "filter.3855383940.name": "name",
                            "filter.3855383940.values.#": "1",
                            "filter.3855383940.values.0": "Windows_Server-2016-English-Full-Containers-*",
                            "hypervisor": "xen",
                            "id": "ami-cdbd65b2",
                            "image_id": "ami-cdbd65b2",
                            "image_location": "amazon/Windows_Server-2016-English-Full-Containers-2018.04.11",
                            "image_owner_alias": "amazon",
                            "image_type": "machine",
                            "most_recent": "true",
                            "name": "Windows_Server-2016-English-Full-Containers-2018.04.11",
                            "owner_id": "801119661308",
                            "owners.#": "1",
                            "owners.0": "amazon",
                            "platform": "windows",
                            "product_codes.#": "0",
                            "public": "true",
                            "root_device_name": "/dev/sda1",
                            "root_device_type": "ebs",
                            "sriov_net_support": "simple",
                            "state": "available",
                            "state_reason.%": "2",
                            "state_reason.code": "UNSET",
                            "state_reason.message": "UNSET",
                            "tags.#": "0",
                            "virtualization_type": "hvm"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_file.user_data": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "92c490bf6f0f39465ef083b7e155d2f9baf22cba13b593b7fc85c605fcf69980",
                        "attributes": {
                            "id": "92c490bf6f0f39465ef083b7e155d2f9baf22cba13b593b7fc85c605fcf69980",
                            "rendered": "\u003cscript\u003e\r\npowershell Install-Module -Name xNetworking -Force\r\n\u003c/script\u003e\r\n\u003cpowershell\u003e\r\n$WhatIf=$false\r\n$TempOut = join-path $env:TEMP ([System.IO.Path]::GetRandomFileName())\r\nWrite-Verbose \"MOF file location: '$TempOut'\"\r\n\r\nConfiguration Service_Fabric_Node\r\n{\r\n    Param($Config)\r\n\tImport-DscResource -ModuleName 'PSDesiredStateConfiguration'\r\n    Import-DSCResource -ModuleName xNetworking\r\n\r\n    WindowsFeature SMB\r\n    {\r\n        Name        = \"FS-SMB1\"\r\n        Ensure      = \"Present\"\r\n    }\r\n\r\n    Service Firewall\r\n    {\r\n        Name        = \"MpsSvc\"\r\n        State       = \"Running\"\r\n    }\r\n\r\n    WindowsFeature DOT_NET\r\n    {\r\n        Name        = \"NET-Framework-45-Core\"\r\n        Ensure      = \"Present\"\r\n    }\r\n\r\n    Service RemoteRegistry\r\n    {\r\n        Name        = \"RemoteRegistry\"\r\n        StartupType = \"Automatic\"\r\n        State       = \"Running\"\r\n    }\r\n\r\n    xFirewall EnableV4PingIn\r\n    {\r\n        Name = 'Allow ICMPv4 protocal'\r\n        Group= 'File and Printer Sharing'\r\n        Protocol = 'ICMPv4'\r\n        Ensure='Present'\r\n        Enabled='True'\r\n        Direction='Inbound'\r\n        Profile = ('Domain', 'Private', 'Public')\r\n    }\r\n}\r\n\r\n$Config = @{\r\n}\r\n\r\nService_Fabric_Node -outputPath \"$TempOut\" -Config $Config -Verbose -ErrorAction Stop\r\n\r\nfunction EnablePSRemoting()\r\n{\r\n\tEnable-PSRemoting -Force\r\n}\r\n\r\nfunction EnableNetworkDiscovery()\r\n{\r\n\tGet-NetFirewallRule -DisplayGroup 'Network Discovery'|Set-NetFirewallRule -Profile 'Private,Domain,Public' -Enabled true\r\n}\r\n\r\nfunction EnableFileAndPrinterSharing()\r\n{\r\n\tGet-NetFirewallRule -DisplayGroup 'File and printer sharing'|Set-NetFirewallRule -Profile 'Private,Domain,Public' -Enabled true\r\n}\r\n\r\nfunction InstallXNetworkingModule\r\n{\r\n\tInstall-Module -Name xNetworking -Force\r\n}\r\n\r\nfunction CreateSFDirectory\r\n{\r\n\tNew-Item c:\\Windows\\Temp\\ServiceFabric -type directory\r\n}\r\n\r\nfunction DownloadServiceFabricZippedPackage()\r\n{\r\n\tInvoke-WebRequest -Uri http://go.microsoft.com/fwlink/?LinkId=730690 -OutFile c:\\Windows\\Temp\\ServiceFabric\\package.zip\r\n}\r\n\r\nfunction UnZipServiceFabricPackage()\r\n{\r\n\tExpand-Archive -LiteralPath c:\\Windows\\Temp\\ServiceFabric\\package.zip -DestinationPath c:\\Windows\\Temp\\ServiceFabric\r\n}\r\n\r\nfunction CheckDSCConfiguration()\r\n{\r\n\tif ($WhatIf)\r\n\t{\r\n\t\tTest-DscConfiguration -Path \"$TempOut\" -Verbose -ErrorAction SilentlyContinue\r\n\t}\r\n\telse\r\n\t{\r\n\t\tStart-DscConfiguration -Path \"$TempOut\" -Verbose -Wait -Force -ErrorAction Stop\r\n\t}\r\n}\r\n\r\nfunction CreateSFCluster()\r\n{\r\n\t$asg = Get-ASAutoScalingGroup -AutoScalingGroupName soumya-sf-ecs-scaling-group | ConvertTo-Json | ConvertFrom-Json\r\n\t$faultDomain = \"fd:/dc1/\" + $asg.Instances.Length\r\n\t$upgradeDomain = \"UD\" + $asg.Instances.Length\r\n\r\n\tIf ($asg.Instances.Length -gt 1) {\t  \r\n\t\r\n\t\t$currentInstanceId =  Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/instance-id\r\n\t\t\r\n\t\t$retries = 3\r\n\t\t$retryCount = 0\r\n\t\t$tried = @($currentInstanceId)\r\n\t\t$completed = $false\r\n\t\t$connectionIp = \"\"\r\n\r\n\t\twhile (-not $completed) {\r\n\t\t\ttry {\r\n\t\t\t\t#get theintanceId that is not equal to the current instance Id from the $asg.Instances array\r\n\t\t\t\t#$connInstanceId = ($asg.Instances.Where{ $tried -notcontains $_.InstanceId } | Select-Object -first 1).InstanceId\r\n\t\t\t\t$connInstanceId = (Get-EC2Instance).RunningInstance| ? {$_.Tag.Key -eq \"IsServiceFabricMaster\" -and $_.Tag.Value -eq \"Yes\"} | SELECT -Expandproperty InstanceId\r\n\t\t\t\t$tried += $connInstanceId\r\n\t\t\r\n\t\t\t\t#use aws powershell ec2 describe api to get the private IP of the $instanceId assign to var $connectionIp\r\n\t\t\t\t$connectionIp = (Get-EC2Instance -InstanceId $connInstanceId).Instances[0].PrivateIpAddress\r\n\t\t\t\t$connectionIp = $connectionIp + \":19000\"\t\t\r\n\t\t\r\n\t\t\t\t.\\AddNode.ps1 -NodeName $currentInstanceId -NodeType NodeType0 -NodeIPAddressorFQDN $privateIp -ExistingClientConnectionEndpoint $connectionIp -UpgradeDomain $upgradeDomain -FaultDomain $faultDomain -AcceptEULA\r\n\t\t\t\t$completed = $true\t\t\t\t\r\n\t\t\t} \r\n\t\t\tcatch {\r\n\t\t\t\t\r\n\t\t\t\tif ($retryCount -ge $retries) {\r\n\t\t\t\t\tWrite-Verbose (\"Command [{0}] failed the maximum number of {1} times.\" -f \"AddNode\", $retryCount)\r\n\t\t\t\t\tthrow\r\n\t\t\t\t} else {\r\n\t\t\t\t\tWrite-Verbose (\"Command [{0}] failed for {1}. Retrying..\" -f \"Add Node\", $connectionIp)\r\n\t\t\t\t\t$retryCount++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t#connect to cluster \r\n\t\tConnect-ServiceFabricCluster -ConnectionEndpoint $connectionIp\t\t\r\n\t\t\r\n\t\t#only upgrade entire cluster if atleast 3 nodes\r\n\t\t$sfConfig = Get-ServiceFabricClusterConfiguration | ConvertFrom-Json\r\n\t\tIf($sfConfig.Nodes.Length -gt 2){\r\n\t\t\t$sfConfig = Get-ServiceFabricClusterConfiguration | ConvertFrom-Json\r\n\r\n\t\t\t#add new node to cluster config\r\n\t\t\t#$sfConfig.Nodes +=$newNode\r\n\t\t\t\r\n\t\t\t#update config verion\r\n\t\t\t#$sfConfig.clusterConfigurationVersion =   $sfConfig.clusterConfigurationVersion + \".\" +  $asg.Instances.Length\r\n\r\n\t\t\t$version = [version]$sfConfig.ClusterConfigurationVersion;\r\n\t\t\t$sfConfig.ClusterConfigurationVersion = \"{0}.{1}.{2}\" -f $version.Major, $version.Minor, ($version.Build + 1)\r\n\r\n\t\t\t#dump to file updated cluster config\r\n\t\t\t$sfConfig | ConvertTo-Json -depth 100 | Out-File \"clusterConfig.json\"\r\n\t\t\t\r\n\t\t\t#upgrade cluster with new node\t\t\t\t\t\r\n\t\t\tStart-ServiceFabricClusterConfigurationUpgrade -ClusterConfigPath \"clusterConfig.json\"\r\n\t\t}\r\n\t}  \r\n\tElse {\r\n\t\t$clusterConfig = (Get-Content ClusterConfig.Unsecure.OneNode.json) -join \"`n\" | ConvertFrom-Json\r\n\t\t$clusterConfig.nodes[0].iPAddress = $privateIp\r\n\t\t$clusterConfig.nodes[0].nodeName = $currentInstanceId\r\n\t\t$clusterConfig.nodes[0].faultDomain = $faultDomain\r\n\t\t$clusterConfig.nodes[0].upgradeDomain = $upgradeDomain\r\n\t\t\r\n\t\t$clusterConfig | ConvertTo-Json -depth 100 | Out-File \"clusterConfig.json\"\r\n\t\t.\\CreateServiceFabricCluster.ps1 -ClusterConfigFilePath .\\ClusterConfig.json -AcceptEULA\r\n\t}\r\n}\r\n\r\ntry\r\n{\r\n\tEnablePSRemoting\r\n\r\n\tSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value * -force\r\n\tGet-NetConnectionProfile | Set-NetConnectionProfile -NetworkCategory Private\r\n\t\r\n\tEnableNetworkDiscovery\r\n\r\n\tEnableFileAndPrinterSharing\r\n\t\r\n\tInstallXNetworkingModule\r\n\t\r\n\tCreateSFDirectory\r\n\t\r\n\tDownloadServiceFabricZippedPackage\r\n\r\n\tUnZipServiceFabricPackage\r\n\r\n    $privateIp =  Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/local-ipv4 \r\n\t$currentInstanceId =  Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/instance-id\r\n\tcd c:\\Windows\\Temp\\ServiceFabric\r\n\t\r\n\tCheckDSCConfiguration\r\n\t\r\n\tCreateSFCluster\r\n\t\r\n}\r\nfinally\r\n{\r\n\tRemove-Item $TempOut -Force -Recurse -ErrorAction Ignore\r\n}\r\n\u003c/powershell\u003e\r\n",
                            "template": "\u003cscript\u003e\r\npowershell Install-Module -Name xNetworking -Force\r\n\u003c/script\u003e\r\n\u003cpowershell\u003e\r\n$WhatIf=$false\r\n$TempOut = join-path $env:TEMP ([System.IO.Path]::GetRandomFileName())\r\nWrite-Verbose \"MOF file location: '$TempOut'\"\r\n\r\nConfiguration Service_Fabric_Node\r\n{\r\n    Param($Config)\r\n\tImport-DscResource -ModuleName 'PSDesiredStateConfiguration'\r\n    Import-DSCResource -ModuleName xNetworking\r\n\r\n    WindowsFeature SMB\r\n    {\r\n        Name        = \"FS-SMB1\"\r\n        Ensure      = \"Present\"\r\n    }\r\n\r\n    Service Firewall\r\n    {\r\n        Name        = \"MpsSvc\"\r\n        State       = \"Running\"\r\n    }\r\n\r\n    WindowsFeature DOT_NET\r\n    {\r\n        Name        = \"NET-Framework-45-Core\"\r\n        Ensure      = \"Present\"\r\n    }\r\n\r\n    Service RemoteRegistry\r\n    {\r\n        Name        = \"RemoteRegistry\"\r\n        StartupType = \"Automatic\"\r\n        State       = \"Running\"\r\n    }\r\n\r\n    xFirewall EnableV4PingIn\r\n    {\r\n        Name = 'Allow ICMPv4 protocal'\r\n        Group= 'File and Printer Sharing'\r\n        Protocol = 'ICMPv4'\r\n        Ensure='Present'\r\n        Enabled='True'\r\n        Direction='Inbound'\r\n        Profile = ('Domain', 'Private', 'Public')\r\n    }\r\n}\r\n\r\n$Config = @{\r\n}\r\n\r\nService_Fabric_Node -outputPath \"$TempOut\" -Config $Config -Verbose -ErrorAction Stop\r\n\r\nfunction EnablePSRemoting()\r\n{\r\n\tEnable-PSRemoting -Force\r\n}\r\n\r\nfunction EnableNetworkDiscovery()\r\n{\r\n\tGet-NetFirewallRule -DisplayGroup 'Network Discovery'|Set-NetFirewallRule -Profile 'Private,Domain,Public' -Enabled true\r\n}\r\n\r\nfunction EnableFileAndPrinterSharing()\r\n{\r\n\tGet-NetFirewallRule -DisplayGroup 'File and printer sharing'|Set-NetFirewallRule -Profile 'Private,Domain,Public' -Enabled true\r\n}\r\n\r\nfunction InstallXNetworkingModule\r\n{\r\n\tInstall-Module -Name xNetworking -Force\r\n}\r\n\r\nfunction CreateSFDirectory\r\n{\r\n\tNew-Item c:\\Windows\\Temp\\ServiceFabric -type directory\r\n}\r\n\r\nfunction DownloadServiceFabricZippedPackage()\r\n{\r\n\tInvoke-WebRequest -Uri http://go.microsoft.com/fwlink/?LinkId=730690 -OutFile c:\\Windows\\Temp\\ServiceFabric\\package.zip\r\n}\r\n\r\nfunction UnZipServiceFabricPackage()\r\n{\r\n\tExpand-Archive -LiteralPath c:\\Windows\\Temp\\ServiceFabric\\package.zip -DestinationPath c:\\Windows\\Temp\\ServiceFabric\r\n}\r\n\r\nfunction CheckDSCConfiguration()\r\n{\r\n\tif ($WhatIf)\r\n\t{\r\n\t\tTest-DscConfiguration -Path \"$TempOut\" -Verbose -ErrorAction SilentlyContinue\r\n\t}\r\n\telse\r\n\t{\r\n\t\tStart-DscConfiguration -Path \"$TempOut\" -Verbose -Wait -Force -ErrorAction Stop\r\n\t}\r\n}\r\n\r\nfunction CreateSFCluster()\r\n{\r\n\t$asg = Get-ASAutoScalingGroup -AutoScalingGroupName soumya-sf-ecs-scaling-group | ConvertTo-Json | ConvertFrom-Json\r\n\t$faultDomain = \"fd:/dc1/\" + $asg.Instances.Length\r\n\t$upgradeDomain = \"UD\" + $asg.Instances.Length\r\n\r\n\tIf ($asg.Instances.Length -gt 1) {\t  \r\n\t\r\n\t\t$currentInstanceId =  Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/instance-id\r\n\t\t\r\n\t\t$retries = 3\r\n\t\t$retryCount = 0\r\n\t\t$tried = @($currentInstanceId)\r\n\t\t$completed = $false\r\n\t\t$connectionIp = \"\"\r\n\r\n\t\twhile (-not $completed) {\r\n\t\t\ttry {\r\n\t\t\t\t#get theintanceId that is not equal to the current instance Id from the $asg.Instances array\r\n\t\t\t\t#$connInstanceId = ($asg.Instances.Where{ $tried -notcontains $_.InstanceId } | Select-Object -first 1).InstanceId\r\n\t\t\t\t$connInstanceId = (Get-EC2Instance).RunningInstance| ? {$_.Tag.Key -eq \"IsServiceFabricMaster\" -and $_.Tag.Value -eq \"Yes\"} | SELECT -Expandproperty InstanceId\r\n\t\t\t\t$tried += $connInstanceId\r\n\t\t\r\n\t\t\t\t#use aws powershell ec2 describe api to get the private IP of the $instanceId assign to var $connectionIp\r\n\t\t\t\t$connectionIp = (Get-EC2Instance -InstanceId $connInstanceId).Instances[0].PrivateIpAddress\r\n\t\t\t\t$connectionIp = $connectionIp + \":19000\"\t\t\r\n\t\t\r\n\t\t\t\t.\\AddNode.ps1 -NodeName $currentInstanceId -NodeType NodeType0 -NodeIPAddressorFQDN $privateIp -ExistingClientConnectionEndpoint $connectionIp -UpgradeDomain $upgradeDomain -FaultDomain $faultDomain -AcceptEULA\r\n\t\t\t\t$completed = $true\t\t\t\t\r\n\t\t\t} \r\n\t\t\tcatch {\r\n\t\t\t\t\r\n\t\t\t\tif ($retryCount -ge $retries) {\r\n\t\t\t\t\tWrite-Verbose (\"Command [{0}] failed the maximum number of {1} times.\" -f \"AddNode\", $retryCount)\r\n\t\t\t\t\tthrow\r\n\t\t\t\t} else {\r\n\t\t\t\t\tWrite-Verbose (\"Command [{0}] failed for {1}. Retrying..\" -f \"Add Node\", $connectionIp)\r\n\t\t\t\t\t$retryCount++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t#connect to cluster \r\n\t\tConnect-ServiceFabricCluster -ConnectionEndpoint $connectionIp\t\t\r\n\t\t\r\n\t\t#only upgrade entire cluster if atleast 3 nodes\r\n\t\t$sfConfig = Get-ServiceFabricClusterConfiguration | ConvertFrom-Json\r\n\t\tIf($sfConfig.Nodes.Length -gt 2){\r\n\t\t\t$sfConfig = Get-ServiceFabricClusterConfiguration | ConvertFrom-Json\r\n\r\n\t\t\t#add new node to cluster config\r\n\t\t\t#$sfConfig.Nodes +=$newNode\r\n\t\t\t\r\n\t\t\t#update config verion\r\n\t\t\t#$sfConfig.clusterConfigurationVersion =   $sfConfig.clusterConfigurationVersion + \".\" +  $asg.Instances.Length\r\n\r\n\t\t\t$version = [version]$sfConfig.ClusterConfigurationVersion;\r\n\t\t\t$sfConfig.ClusterConfigurationVersion = \"{0}.{1}.{2}\" -f $version.Major, $version.Minor, ($version.Build + 1)\r\n\r\n\t\t\t#dump to file updated cluster config\r\n\t\t\t$sfConfig | ConvertTo-Json -depth 100 | Out-File \"clusterConfig.json\"\r\n\t\t\t\r\n\t\t\t#upgrade cluster with new node\t\t\t\t\t\r\n\t\t\tStart-ServiceFabricClusterConfigurationUpgrade -ClusterConfigPath \"clusterConfig.json\"\r\n\t\t}\r\n\t}  \r\n\tElse {\r\n\t\t$clusterConfig = (Get-Content ClusterConfig.Unsecure.OneNode.json) -join \"`n\" | ConvertFrom-Json\r\n\t\t$clusterConfig.nodes[0].iPAddress = $privateIp\r\n\t\t$clusterConfig.nodes[0].nodeName = $currentInstanceId\r\n\t\t$clusterConfig.nodes[0].faultDomain = $faultDomain\r\n\t\t$clusterConfig.nodes[0].upgradeDomain = $upgradeDomain\r\n\t\t\r\n\t\t$clusterConfig | ConvertTo-Json -depth 100 | Out-File \"clusterConfig.json\"\r\n\t\t.\\CreateServiceFabricCluster.ps1 -ClusterConfigFilePath .\\ClusterConfig.json -AcceptEULA\r\n\t}\r\n}\r\n\r\ntry\r\n{\r\n\tEnablePSRemoting\r\n\r\n\tSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value * -force\r\n\tGet-NetConnectionProfile | Set-NetConnectionProfile -NetworkCategory Private\r\n\t\r\n\tEnableNetworkDiscovery\r\n\r\n\tEnableFileAndPrinterSharing\r\n\t\r\n\tInstallXNetworkingModule\r\n\t\r\n\tCreateSFDirectory\r\n\t\r\n\tDownloadServiceFabricZippedPackage\r\n\r\n\tUnZipServiceFabricPackage\r\n\r\n    $privateIp =  Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/local-ipv4 \r\n\t$currentInstanceId =  Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/instance-id\r\n\tcd c:\\Windows\\Temp\\ServiceFabric\r\n\t\r\n\tCheckDSCConfiguration\r\n\t\r\n\tCreateSFCluster\r\n\t\r\n}\r\nfinally\r\n{\r\n\tRemove-Item $TempOut -Force -Recurse -ErrorAction Ignore\r\n}\r\n\u003c/powershell\u003e\r\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}
